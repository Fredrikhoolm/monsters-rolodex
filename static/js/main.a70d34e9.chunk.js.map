{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACvB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCFdC,G,MAAW,SAACR,GAErB,OAAQ,qBAAKC,UAAU,YAAf,SACFD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OAC5B,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,WCNhBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAEjB,uBACCX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8CJG,G,wDA9Cf,aAAc,IAAD,8BACX,gBAkBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXjB,SAAU,GACVc,YAAY,IAGd,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAYb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEb,SAAUuB,Y,oBASzC,WAAS,IAAD,SAE0BC,KAAKP,MAA9BjB,EAFD,EAECA,SAAUc,EAFX,EAEWA,YACXW,EAAmBzB,EAAS0B,QAAO,SAAAC,GAAO,OAC9CA,EAAQzB,KAAK0B,cAAcC,SAASf,EAAYc,kBAIlD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAc,SAAAI,GAAC,OAAI,EAAKJ,gBAExB,cAAC,EAAD,CAAUR,SAAUyB,W,GAzCVK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a70d34e9.chunk.js","sourcesContent":["import react from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"monsters\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monsters.name}</h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    \r\n    return (<div className='card-list'>\r\n         {props.monsters.map(monsters => (\r\n         <Card key={monsters.id} monsters={monsters}/>\r\n         ))}\r\n    </div>);\r\n\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n\r\n        <input \r\n         className='search'\r\n         type='search'\r\n         placeholder={placeholder}\r\n         onChange={handleChange}/>\r\n        \r\n);","import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nimport {SearchBox} from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n\nconstructor(){\n  super();\n\n  this.state = {\n    monsters: [],\n    searchField:''\n  };\n\n  this.handleChange = this.handleChange.bind(this);\n\n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json()\n  .then(users => this.setState({ monsters: users}))\n  );\n} \n\nhandleChange = (e) =>{\n  this.setState({searchField: e.target.value});\n}\n\n\n  render(){\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n        placeholder='Search Monsters'\n        handleChange={e => this.handleChange}/>\n\n        <CardList monsters={filteredMonsters}/>\n\n      </div>\n  );\n\n}};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}